version: "3.9"

services:
  web:
    build: .
    container_name: jobs_web
    command: >
      gunicorn scraper_api_service.wsgi:application
      --workers ${GUNICORN_WORKERS:-3}
      --bind ${GUNICORN_BIND:-0.0.0.0:8000}
      --timeout 120
    env_file: .env
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - static_data:/app/staticfiles
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

  worker:
    build: .
    container_name: jobs_worker
    command: celery -A scraper_api_service worker -l info --concurrency=2
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  beat:
    build: .
    container_name: jobs_beat
    command: celery -A scraper_api_service beat -l info
    env_file: .env
    depends_on:
      - worker
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  bot:
    build: .
    container_name: jobs_bot
    command: python -m telegram_bot_service.bot
    env_file: .env
    depends_on:
      - web
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: jobs_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: jobs_redis
    restart: unless-stopped

volumes:
  pgdata:
  static_data:
